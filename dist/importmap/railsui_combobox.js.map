{
  "version": 3,
  "sources": ["../../src/railsui_combobox.js"],
  "sourcesContent": ["import { Controller } from '@hotwired/stimulus'\nimport { useTransition } from 'stimulus-use'\n\nexport default class extends Controller {\n  static targets = [\n    'input',\n    'list',\n    'option',\n    'box',\n    'text',\n    'hiddenInput',\n    'checkmark',\n    'noresults',\n  ]\n  static values = {\n    activeClass: String,\n    inactiveClass: String,\n  }\n\n  connect() {\n    useTransition(this, {\n      element: this.listTarget,\n    })\n\n    this.isOpen = false\n    this.activeIndex = -1\n    this.updateTabIndices()\n  }\n\n  toggleDropdown(event) {\n    // Only toggle dropdown if clicking on the combobox-display\n    if (event.target === this.boxTarget || this.boxTarget.contains(event.target)) {\n      this.isOpen ? this.hideDropdown() : this.showDropdown()\n    }\n  }\n\n  showDropdown() {\n    this.enter() // Trigger the transition\n    this.boxTarget.setAttribute('aria-expanded', 'true')\n    this.listTarget.setAttribute('aria-expanded', 'true')\n    this.isOpen = true\n\n    // Set the first visible option as active by default\n    if (this.activeIndex === -1 && this.getVisibleOptions().length > 0) {\n      this.activeIndex = 0\n      this.updateActiveDescendant()\n    }\n\n    this.inputTarget.focus() // Focus the search input\n    this.updateTabIndices()\n  }\n\n  hideDropdown() {\n    this.leave()\n    this.boxTarget.setAttribute('aria-expanded', 'false')\n    this.listTarget.setAttribute('aria-expanded', 'false')\n    this.isOpen = false\n    this.updateActiveDescendant()\n    this.updateTabIndices()\n  }\n\n  handleOutsideClick(event) {\n    // Ensure clicks inside the combobox don't trigger a close\n    if (!this.element.contains(event.target)) {\n      this.hideDropdown()\n    }\n  }\n\n  filter(event) {\n    const searchTerm = event.target.value.toLowerCase()\n    let hasVisibleOptions = false\n\n    this.optionTargets.forEach(option => {\n      const text = option.textContent.toLowerCase()\n      const isVisible = text.includes(searchTerm)\n      option.style.display = isVisible ? 'flex' : 'none'\n      if (isVisible) hasVisibleOptions = true\n    })\n\n    // Show or hide \"No results\" message\n    if (this.hasNoresultsTarget) {\n      this.noresultsTarget.classList.toggle('hidden', hasVisibleOptions)\n    }\n\n    // Adjust active index to fit within visible options\n    const visibleOptions = this.getVisibleOptions()\n    if (this.activeIndex >= visibleOptions.length) {\n      this.activeIndex = visibleOptions.length - 1\n    }\n    if (this.activeIndex < 0 && visibleOptions.length > 0) {\n      this.activeIndex = 0\n    }\n\n    this.updateActiveDescendant()\n    this.updateTabIndices()\n  }\n\n  handleKeydown(event) {\n    const key = event.key\n\n    switch (key) {\n      case 'ArrowDown':\n        event.preventDefault()\n        this.setActiveIndex(this.activeIndex + 1)\n        break\n      case 'ArrowUp':\n        event.preventDefault()\n        this.setActiveIndex(this.activeIndex - 1)\n        break\n      case 'Enter':\n        event.preventDefault()\n        if (this.activeIndex >= 0) {\n          this.selectOptionByIndex(this.activeIndex)\n        }\n        break\n      case 'Escape':\n        this.hideDropdown()\n        break\n    }\n  }\n\n  setActiveIndex(index) {\n    const visibleOptions = this.getVisibleOptions()\n    if (visibleOptions.length === 0) return\n\n    if (index < 0) index = visibleOptions.length - 1 // Wrap to last option\n    if (index >= visibleOptions.length) index = 0 // Wrap to first option\n\n    this.activeIndex = index // Update active index\n    this.updateActiveDescendant() // Refresh active descendant\n  }\n\n  updateActiveDescendant() {\n    const visibleOptions = this.getVisibleOptions()\n\n    visibleOptions.forEach((option, index) => {\n      const isActive = index === this.activeIndex\n      this.toggleClassesAndAria(option, isActive)\n    })\n\n    if (this.activeIndex >= 0 && visibleOptions[this.activeIndex]) {\n      this.inputTarget.setAttribute('aria-activedescendant', visibleOptions[this.activeIndex].id)\n    } else {\n      this.inputTarget.removeAttribute('aria-activedescendant')\n    }\n  }\n\n  toggleClassesAndAria(element, isActive) {\n    const addClasses = isActive ? this.activeClassValue : this.inactiveClassValue\n    const removeClasses = isActive ? this.inactiveClassValue : this.activeClassValue\n\n    // Toggle classes\n    element.classList.add(...addClasses.split(' '))\n    element.classList.remove(...removeClasses.split(' '))\n\n    // Update ARIA attributes\n    element.setAttribute('aria-selected', isActive ? 'true' : 'false')\n\n    const checkmark = element.querySelector(\"[data-railsui-combobox-target='checkmark']\")\n    if (checkmark) {\n      // Show the checkmark if active, otherwise hide it\n      checkmark.classList.toggle('hidden', !isActive)\n    }\n  }\n\n  selectOption(event) {\n    const option = event.currentTarget\n\n    // Find the index of the clicked option\n    const visibleOptions = this.getVisibleOptions()\n    const index = visibleOptions.indexOf(option)\n\n    if (index !== -1) {\n      this.activeIndex = index // Update active index\n    }\n\n    const value = option.dataset.value || option.textContent.trim()\n    const displayText = option.textContent.trim()\n    this.updateDisplay(displayText, value)\n  }\n\n  selectOptionByIndex(index) {\n    const visibleOptions = this.getVisibleOptions()\n    const option = visibleOptions[index]\n    const value = option.dataset.value || option.textContent.trim()\n    const displayText = option.textContent.trim()\n    this.updateDisplay(displayText, value)\n  }\n\n  updateDisplay(displayText, value = null) {\n    this.textTarget.textContent = displayText\n    this.hideDropdown()\n    this.hiddenInputTarget.value = value || displayText\n  }\n\n  getVisibleOptions() {\n    return this.optionTargets.filter(option => option.style.display !== 'none')\n  }\n\n  updateTabIndices() {\n    const visibleOptions = this.getVisibleOptions()\n    this.optionTargets.forEach(option => {\n      option.setAttribute('tabindex', visibleOptions.includes(option) ? '0' : '-1')\n    })\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
