{
  "version": 3,
  "sources": ["../../src/railsui_date_range_picker.js"],
  "sourcesContent": ["import { Controller } from '@hotwired/stimulus'\nimport flatpickr from 'flatpickr'\n\nconst currentDate = new Date()\nconst oneWeekLater = new Date(currentDate.getTime() + 7 * 24 * 60 * 60 * 1000)\n\nexport default class extends Controller {\n  static targets = ['label', 'input']\n  static values = {\n    mode: { type: String, default: 'range' },\n    minDate: { type: String, default: 'today' },\n    dateFormat: { type: String, default: 'Y-m-d' },\n    range: {\n      type: Array,\n      default: [currentDate, oneWeekLater],\n    },\n  }\n\n  connect() {\n    // Parse the rangeValue if passed otherwise fallback to defaults (today + 1.week)\n    // Add to data-controller wrapper data-date-range-picker-range-value='[\"2023-11-18\", \"2023-11-25\"]' =>\n    this.rangeValue = this.rangeValue.map(dateString => new Date(dateString))\n\n    let self = this\n    const picker = flatpickr(this.element, {\n      mode: this.modeValue,\n      minDate: this.minDateValue,\n      dateFormat: this.dateFormatValue,\n      defaultDate: this.rangeValue,\n      onChange: function (selectedDates, dateStr, instance) {\n        self.setCurrentRange(instance)\n      },\n    })\n\n    this.setCurrentRange(picker)\n  }\n\n  setCurrentRange(picker) {\n    const formatDate = date => {\n      const options = { month: 'short', day: 'numeric' }\n      return date.toLocaleDateString('en-US', options)\n    }\n\n    const range = picker.selectedDates.map(formatDate).join(' - ')\n\n    if (this.hasLabelTarget) {\n      this.labelTarget.textContent = range\n\n      // Update formatting to match your data type needs\n      // See: https://flatpickr.js.org/options/\n      this.inputTarget.value = picker.selectedDates\n    }\n\n    // Do something with the server to return dates\n  }\n}\n"],
  "mappings": ";;;AAAA,SAAS,kBAAkB;AAC3B,OAAO,eAAe;AAEtB,MAAM,cAAc,oBAAI,KAAK;AAC7B,MAAM,eAAe,IAAI,KAAK,YAAY,QAAQ,IAAI,IAAI,KAAK,KAAK,KAAK,GAAI;AAE7E,MAAO,0CAAsB,WAAW;AAAA,EAYtC,UAAU;AAGR,SAAK,aAAa,KAAK,WAAW,IAAI,gBAAc,IAAI,KAAK,UAAU,CAAC;AAExE,QAAI,OAAO;AACX,UAAM,SAAS,UAAU,KAAK,SAAS;AAAA,MACrC,MAAM,KAAK;AAAA,MACX,SAAS,KAAK;AAAA,MACd,YAAY,KAAK;AAAA,MACjB,aAAa,KAAK;AAAA,MAClB,UAAU,SAAU,eAAe,SAAS,UAAU;AACpD,aAAK,gBAAgB,QAAQ;AAAA,MAC/B;AAAA,IACF,CAAC;AAED,SAAK,gBAAgB,MAAM;AAAA,EAC7B;AAAA,EAEA,gBAAgB,QAAQ;AACtB,UAAM,aAAa,UAAQ;AACzB,YAAM,UAAU,EAAE,OAAO,SAAS,KAAK,UAAU;AACjD,aAAO,KAAK,mBAAmB,SAAS,OAAO;AAAA,IACjD;AAEA,UAAM,QAAQ,OAAO,cAAc,IAAI,UAAU,EAAE,KAAK,KAAK;AAE7D,QAAI,KAAK,gBAAgB;AACvB,WAAK,YAAY,cAAc;AAI/B,WAAK,YAAY,QAAQ,OAAO;AAAA,IAClC;AAAA,EAGF;AACF;AAhDE,cADK,mCACE,WAAU,CAAC,SAAS,OAAO;AAClC,cAFK,mCAEE,UAAS;AAAA,EACd,MAAM,EAAE,MAAM,QAAQ,SAAS,QAAQ;AAAA,EACvC,SAAS,EAAE,MAAM,QAAQ,SAAS,QAAQ;AAAA,EAC1C,YAAY,EAAE,MAAM,QAAQ,SAAS,QAAQ;AAAA,EAC7C,OAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAC,aAAa,YAAY;AAAA,EACrC;AACF;",
  "names": []
}
