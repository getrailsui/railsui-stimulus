{
  "version": 3,
  "sources": ["../../src/railsui_count_up.js"],
  "sourcesContent": ["import { Controller } from '@hotwired/stimulus'\n\nexport default class extends Controller {\n  static values = {\n    target: Number,\n    duration: { type: Number, default: 2000 },\n  }\n\n  connect() {\n    this.createObserver()\n  }\n\n  createObserver() {\n    const options = {\n      root: null,\n      rootMargin: '0px',\n      threshold: 0.1,\n    }\n\n    this.observer = new IntersectionObserver(this.handleIntersect.bind(this), options)\n    this.observer.observe(this.element)\n  }\n\n  handleIntersect(entries) {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        this.animateCountUp()\n        this.observer.unobserve(this.element) // Stop observing after animation starts\n      }\n    })\n  }\n\n  animateCountUp() {\n    const start = 0\n    const end = this.targetValue\n    const duration = this.durationValue\n    const frameRate = 60 // frames per second\n    const totalFrames = Math.round((duration / 1000) * frameRate)\n    const increment = (end - start) / totalFrames\n\n    let current = start\n    let frame = 0\n\n    const timer = setInterval(() => {\n      current += increment\n      frame++\n      if (frame >= totalFrames) {\n        clearInterval(timer)\n        current = end\n      }\n      this.updateDisplay(current)\n    }, 1000 / frameRate)\n  }\n\n  updateDisplay(value) {\n    if (this.hasPercentage()) {\n      this.element.textContent = `${value.toFixed(1)}%`\n    } else {\n      this.element.textContent = this.formatNumber(value)\n    }\n  }\n\n  hasPercentage() {\n    return this.element.dataset.railsuiCountUp && this.element.dataset.railsuiCountUp.includes('%')\n  }\n\n  formatNumber(value) {\n    return Math.round(value).toLocaleString()\n  }\n}\n"],
  "mappings": ";;;AAAA,SAAS,kBAAkB;AAE3B,MAAO,iCAAsB,WAAW;AAAA,EAMtC,UAAU;AACR,SAAK,eAAe;AAAA,EACtB;AAAA,EAEA,iBAAiB;AACf,UAAM,UAAU;AAAA,MACd,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,WAAW;AAAA,IACb;AAEA,SAAK,WAAW,IAAI,qBAAqB,KAAK,gBAAgB,KAAK,IAAI,GAAG,OAAO;AACjF,SAAK,SAAS,QAAQ,KAAK,OAAO;AAAA,EACpC;AAAA,EAEA,gBAAgB,SAAS;AACvB,YAAQ,QAAQ,WAAS;AACvB,UAAI,MAAM,gBAAgB;AACxB,aAAK,eAAe;AACpB,aAAK,SAAS,UAAU,KAAK,OAAO;AAAA,MACtC;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEA,iBAAiB;AACf,UAAM,QAAQ;AACd,UAAM,MAAM,KAAK;AACjB,UAAM,WAAW,KAAK;AACtB,UAAM,YAAY;AAClB,UAAM,cAAc,KAAK,MAAO,WAAW,MAAQ,SAAS;AAC5D,UAAM,aAAa,MAAM,SAAS;AAElC,QAAI,UAAU;AACd,QAAI,QAAQ;AAEZ,UAAM,QAAQ,YAAY,MAAM;AAC9B,iBAAW;AACX;AACA,UAAI,SAAS,aAAa;AACxB,sBAAc,KAAK;AACnB,kBAAU;AAAA,MACZ;AACA,WAAK,cAAc,OAAO;AAAA,IAC5B,GAAG,MAAO,SAAS;AAAA,EACrB;AAAA,EAEA,cAAc,OAAO;AACnB,QAAI,KAAK,cAAc,GAAG;AACxB,WAAK,QAAQ,cAAc,GAAG,MAAM,QAAQ,CAAC,CAAC;AAAA,IAChD,OAAO;AACL,WAAK,QAAQ,cAAc,KAAK,aAAa,KAAK;AAAA,IACpD;AAAA,EACF;AAAA,EAEA,gBAAgB;AACd,WAAO,KAAK,QAAQ,QAAQ,kBAAkB,KAAK,QAAQ,QAAQ,eAAe,SAAS,GAAG;AAAA,EAChG;AAAA,EAEA,aAAa,OAAO;AAClB,WAAO,KAAK,MAAM,KAAK,EAAE,eAAe;AAAA,EAC1C;AACF;AAlEE,cADK,0BACE,UAAS;AAAA,EACd,QAAQ;AAAA,EACR,UAAU,EAAE,MAAM,QAAQ,SAAS,IAAK;AAC1C;",
  "names": []
}
